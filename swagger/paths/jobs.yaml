/jobs:
  get:
    summary: Return all jobs
    operationId: get_all_jobs
    x-fw-pagination: true
    x-fw-default-limit: 1000
    tags:
    - jobs
    parameters:
      - in: query
        type: string
        name: states
        description: filter results by job state
      - in: query
        type: string
        name: tags
        description: filter results by job tags
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/all-jobs-list.json

/jobs/add:
  post:
    summary: Add a job
    operationId: add_job
    tags:
    - jobs
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-new.json
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/job-new.json
        examples:
          response:
            _id: 573cb66b135d87002660597c

/jobs/ask:
  post:
    summary: Ask the queue a question
    description: Ask the queue a question, recieving work or statistics in return.
    operationId: ask_jobs
    tags:
    - jobs
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-ask.json
    responses:
      '200':
        description: ''

/jobs/determine_provider:
  post:
    summary: Determine the effective compute provider for a proposed job.
    operationId: determine_provider_for_job
    tags:
    - jobs
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-new.json
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/provider.json

/jobs/next:
  get:
    summary: Get the next job in the queue
    description: Used by the engine.
    operationId: get_next_job
    tags:
    - jobs
    parameters:
      - name: tags
        in: query
        type: array
        items:
          type: string
        collectionFormat: multi
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/job.json
        examples:
          response:
            $ref: examples/output/job.json
/jobs/stats:
  get:
    summary: Get stats about all current jobs
    operationId: get_jobs_stats
    tags:
    - jobs
    responses:
      '200':
        description: ''
        schema:
          example:
            $ref: examples/job_stats.json
/jobs/reap:
  post:
    summary: Reap stale jobs
    operationId: reap_jobs
    tags:
    - jobs
    responses:
      '200':
        description: ''
        schema:
          example:
            orphaned: 3
/jobs/{JobId}:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  get:
    summary: Get job details
    operationId: get_job
    tags:
    - jobs
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/job.json
        examples:
          response:
            $ref: examples/output/job.json
      '404':
        description: JobId not found
  put:
    summary: Update a job.
    description: >
      Updates timestamp.

      Enforces a valid state machine transition, if any.

      Rejects any change to a job that is not currently in 'pending' or
      'running' state.

      Accepts the same body as /api/jobs/add , except all fields are optional.
    operationId: modify_job
    tags:
    - jobs
    responses:
      '200':
        description: Job was updated.  No value is returned
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-update.json
/jobs/{JobId}/detail:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  get:
    summary: Get job container details
    operationId: get_job_detail
    tags:
    - jobs
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/job-detail.json
      '404':
        description: JobId not found
/jobs/{JobId}/profile:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  put:
    summary: Update profile information on a job. (e.g. machine type, etc)
    operationId: update_job_profile
    tags:
    - jobs
    responses:
      '200':
        $ref: '#/responses/200:modified-with-count'
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-profile-update.json
/jobs/{JobId}/retry:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  post:
    summary: Retry a job.
    description: >
      The job must have a state of 'failed', and must not have already been
      retried.

      The failed jobs config is copied to a new job.

      The ID of the new job is returned
    operationId: retry_job
    tags:
    - jobs
    parameters:
      - name: computeProviderId
        in: query
        required: false
        type: string
      - name: ignoreState
        in: query
        required: false
        type: boolean
    responses:
      '200':
        description: ''
        schema:
          example:
            _id: 57a35c118120be0e8d1f3f5f
/jobs/{JobId}/config.json:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  get:
    summary: Get a job's config
    operationId: get_job_config
    tags:
    - jobs
    responses:
      '200':
        description: ''
        schema:
          $ref: schemas/output/job-config.json
/jobs/{JobId}/logs:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  get:
    summary: Get job logs
    operationId: get_job_logs
    tags:
    - jobs
    responses:
      '200':
        description: The current job log
        schema:
          $ref: schemas/output/job-log.json
  post:
    summary: Add logs to a job.
    operationId: add_job_logs
    tags:
    - jobs
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-logs.json
    responses:
      '200':
        description: Logs were added. No value is returned.
/jobs/{JobId}/accept-failed-output:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  post:
    summary: Accept failed job output.
    description: >
      Remove the 'from_failed_job' flag from the files.

      Create any automatic jobs for the accepted files.
    operationId: accept_failed_output
    tags:
    - jobs
    responses:
      '200':
        description: Failed output is accepted and created any automatic jobs.
      '400':
        description: Can only accept failed output of a job that failed.
/jobs/{JobId}/prepare-complete:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  post:
    summary: Create a ticket for completing a job, with id and status.
    operationId: prepare_complete_job
    tags:
    - jobs
    responses:
      '200':
        description: 'Returns a ticket'
        schema:
          $ref: schemas/output/job-completion-ticket.json
/jobs/{JobId}/complete:
  parameters:
    - required: true
      type: string
      in: path
      name: JobId
  post:
    summary: Complete a job, with information
    operationId: complete_job
    parameters:
      - name: job_ticket_id
        type: string
        in: query
      - name: body
        in: body
        required: true
        schema:
          $ref: schemas/input/job-completion.json
    tags:
    - jobs
    responses:
      '200':
        description: 'Job completion was successful'
